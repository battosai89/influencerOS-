// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/academy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/academy">> = Specific
  const handler = {} as typeof import("../../src/app/academy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/analytics/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/analytics">> = Specific
  const handler = {} as typeof import("../../src/app/analytics/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/brands/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brands/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/brands/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/calendar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/calendar">> = Specific
  const handler = {} as typeof import("../../src/app/calendar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/campaigns/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/campaigns/new">> = Specific
  const handler = {} as typeof import("../../src/app/campaigns/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/campaigns/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/campaigns">> = Specific
  const handler = {} as typeof import("../../src/app/campaigns/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/clients/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/clients">> = Specific
  const handler = {} as typeof import("../../src/app/clients/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/connectors/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/connectors">> = Specific
  const handler = {} as typeof import("../../src/app/connectors/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/content-hub/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/content-hub">> = Specific
  const handler = {} as typeof import("../../src/app/content-hub/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contracts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contracts">> = Specific
  const handler = {} as typeof import("../../src/app/contracts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/financials/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/financials">> = Specific
  const handler = {} as typeof import("../../src/app/financials/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/inbox/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/inbox">> = Specific
  const handler = {} as typeof import("../../src/app/inbox/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/influencers/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/influencers/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/influencers/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/influencers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/influencers">> = Specific
  const handler = {} as typeof import("../../src/app/influencers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/invoices/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/invoices">> = Specific
  const handler = {} as typeof import("../../src/app/invoices/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/target-cursor-demo/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/target-cursor-demo">> = Specific
  const handler = {} as typeof import("../../src/app/target-cursor-demo/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/tasks/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/tasks">> = Specific
  const handler = {} as typeof import("../../src/app/tasks/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/team/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/team">> = Specific
  const handler = {} as typeof import("../../src/app/team/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/test-cursor/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/test-cursor">> = Specific
  const handler = {} as typeof import("../../src/app/test-cursor/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../src/app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
